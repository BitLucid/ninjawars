cd simpletest
git submodule init
git submodule update

ln -s .gitignore.template .gitignore


When you want to make changes in the submodule, treat it as a normal git directory, 
just be aware that running a "git submodule update" from the root/outer repository can mess with the checked out copy
of the submodule folder.  So remember to commit any changes in the hash that you want tracked:


cd simpletest
git commit -am 'blah'
git push
cd ../../../..
git commit -am "  Submodule: Change the commit we use for simpletest to blah."
proceed with your life

Whenever you want to pull the latest commit of the submodule, make sure you don't have any changes in there, and then:
git submodule update


This submodule was added by using (from the root of the repo):
git submodule add git@github.com:BitLucid/simpletest.git deploy/lib/third-party/simpletest
and then committing the submodule tracker & the directory:
git commit -am "  Simpletest: Added simpletest as a submodule."

Further issues?:
http://git-scm.com/book/en/Git-Tools-Submodules
