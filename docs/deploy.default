#!/bin/bash

#todo - Add vhost generation
#todo - Add interactive questions to make the script "wizard"-like
#todo - Add batch option to use defaults and avoid interactivity
#todo - integrate database scripts to run by an option

usage()
{
   cat <<EOF
Usage: deploy -d=DIR -h=URL [OPTIONS]
Options:
       [-r=/foo/bar/samplesResources.php]
       [-s=/foo/bar/deploy/]
       [-db=databasename]
       [-c]
       [-f]
EOF
       exit $1
}

if test $# -eq 0; then
       usage 1 1>&2
fi

SMARTY_CACHING='false'
force=false
resources_template='../samples/sampleResourcesFile.php'
deployment_source='../deploy/'
database_name='eventware_test'

while test $# -gt 0; do
       case "$1" in
       -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
       *) optarg= ;;
       esac

       case $1 in
               -d=*)
               DEPLOYMENT_TARGET=$optarg
               ;;
               -h=*)
               HTTP_ROOT=$optarg
               ;;
               -db=*)
               database_name=$optarg
               ;;
               -c)
               SMARTY_CACHING='true'
               ;;
               -f)
               force=true
               ;;
               -r=*)
               resources_template=$optarg
               ;;
               -s=*)
               deployment_source=$optarg
               ;;
       esac
       shift
done

#TESTS FOR ABILITY TO ACTUALLY DO THIS
if [[ ! $DEPLOYMENT_TARGET || ! $HTTP_ROOT ]]
then
       usage 1 1>&2
fi

if [ ! -e $resources_template ]
then
       echo "Resources file template $resources_template not found! Aborting."
       exit
fi

if [ ! -d $deployment_source ]
then
       echo "Deployment source $deployment_source not found! Aborting."
       exit
fi

if [ ${DEPLOYMENT_TARGET: -1} != '/' ]
then
       DEPLOYMENT_TARGET=${DEPLOYMENT_TARGET}/
fi

if [ ${HTTP_ROOT: -1} != '/' ]
then
       HTTP_ROOT=${HTTP_ROOT}/
fi

if [ ! -d $DEPLOYMENT_TARGET ]
then
       if [ $force == true ]
       then
               mkdir -p $DEPLOYMENT_TARGET
       else
               echo -n "The target directory $DEPLOYMENT_TARGET does not exist. Shall I create it? [Y/n]: "
               read answer
               if [[ $answer == "y" || $answer == "Y" || $answer == "" ]]
               then
                       mkdir -p $DEPLOYMENT_TARGET
               else
                       echo "User aborted deployment script. No changes have been made."
                       exit
               fi
       fi
fi

if [ ! -d $DEPLOYMENT_TARGET/www ]
then
       mkdir $DEPLOYMENT_TARGET/www/
fi

if [ ! -d $DEPLOYMENT_TARGET/templates ]
then
       mkdir $DEPLOYMENT_TARGET/templates/
fi

if [ ! -d $DEPLOYMENT_TARGET/templates_c ]
then
       mkdir $DEPLOYMENT_TARGET/templates_c/
       chmod 777 $DEPLOYMENT_TARGET/templates_c/
fi

if [ ! -d $DEPLOYMENT_TARGET/reports ]
then
       mkdir $DEPLOYMENT_TARGET/reports/
fi

if [ ! -d $DEPLOYMENT_TARGET/uploads ]
then
       mkdir $DEPLOYMENT_TARGET/uploads/
fi

if [ ! -d $DEPLOYMENT_TARGET/reports/tmp ]
then
       mkdir $DEPLOYMENT_TARGET/reports/tmp/
fi

rm -rf $DEPLOYMENT_TARGET/www/*
rm -rf $DEPLOYMENT_TARGET/templates/*

cp -rf $deployment_source/www/* $DEPLOYMENT_TARGET/www/
cp -rf $deployment_source/templates/* $DEPLOYMENT_TARGET/templates/

cp $resources_template $DEPLOYMENT_TARGET/www/resources.php

sed -i -e {s/SED_SERVER_ROOT/"'"${DEPLOYMENT_TARGET//\//\\/}"'"/} $DEPLOYMENT_TARGET/www/resources.php
sed -i -e {s/SED_HTTP_ROOT/"'"${HTTP_ROOT//\//\\/}"'"/} $DEPLOYMENT_TARGET/www/resources.php
sed -i -e {s/SED_SMARTY_CACHING/${SMARTY_CACHING//\//\\/}/} $DEPLOYMENT_TARGET/www/resources.php
sed -i -e {s/SED_DB_NAME/"'"${database_name//\//\\/}"'"/} $DEPLOYMENT_TARGET/www/resources.php

find $DEPLOYMENT_TARGET -name .svn -exec rm -rf '{}' \;
