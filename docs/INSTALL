Dependencies
-------------
Need LINUX!  Ubuntu, debian, whatever.  If you try to use windows, you're totally reliant on your own competence!
The project doesn't run on windows out of the box, and we don't support it for developers!
(for example, you'll immediately run into a problem where linux symlinks for folders aren't supported in windows).
You'll also need Git, of course.


As far as the linux install:
First, ask Roy about a Vagrant virtualmachine.  It might make things much simpler.  Barring that, see below.

Configure Your Web Server On Your Own
=======================================

Create a web server, with a fake local domain, e.g. "http://nw.local"
In general, you can use whatever web server you want, nginx/php7-fpm is in use on PROD and recommended.

Install PHP and extensions on your own
======================================
Install php , e.g.

    apt install php7.4-cli php7.4-fpm
    apt install php7.4-mbstring php7.4-xml php7.4-curl php7.4-pgsql
    sudo phpenmod xml pgsql curl mbstring
    OR see make install-system for commands

Configure Your Postgresql Database On Your Own
==============================================
You'll need postgresql installed and set up, you'll need to be able to log in to postgres, create a blank database (e.g. nw),
and create the developers role, something like this:

	createdb nw
    echo "create role developers;
    GRANT ALL ON nw.* TO GROUP developers;
    GRANT ALL ON DATABASE nw to group developers;
    create role kzqai SUPERUSER LOGIN in group developers;" | psql nw

You'll also need to install postgresql-contrib for bcrypt password hashing.

    sudo apt-get install postgresql postgresql-contrib php7-pgsql
    echo "create extension pgcrypto" | psql -d nw
    * http://stackoverflow.com/questions/2647158/how-can-i-hash-passwords-in-postgresql

Since we are now using postgresql 10, you'll need to install that on your local.

Now you might want to request an up-to-date dev database dump, or you can copy in the basic schema and figures:

    psql nw < deploy/sql/schema.sql
    psql nw < deploy/sql/fixtures.sql


Composer Install
=================================

    composer install

Make
=================================

    ./configure
    make
    make install


Create Directories
==================================
Make some of your directories
	mkdir -p deploy/resources/logs
	mkdir deploy/templates/compiled
	chmod uga+rX,ug+wx deploy/templates/compiled


Copy Config Files
======================
Copy the config files:

	cp deploy/resources.build.php deploy/resources.php

Now edit all of those with your database name, and change whatever info you need to!

Run Your Tests!
=======================

    make test

Will tell you how close you are to complete!


Cron Scripts Are Available
==================================
Finally, be aware that you can manually run:

    php deploy/cron/tick_atomic.php

Cron scripts to make time pass, heal characters, etc etc.